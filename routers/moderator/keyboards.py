from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from models import TagSettingsModel

def punishment_list() -> InlineKeyboardMarkup:
    punish = {
        # "kick": "–ö–∏–∫",
        "ban": "–ü–µ—Ä–º–∞—á",
        "tempban": "–í—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞–Ω",
        "mute": "–í—Ä–µ–º–µ–Ω–Ω—ã–π –º—É—Ç",
        # "warn": "–ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å",
        # "cancel": "< –û—Ç–º–µ–Ω–∏—Ç—å"
    }
    keyboard = []
    for key in punish:
        keyboard.append([
            InlineKeyboardButton(text=punish[key], callback_data=key)
        ])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def punish_term_select() -> InlineKeyboardMarkup:
    terms = {
        "1h": "1 —á–∞—Å",
        "24h": "24 —á–∞—Å–∞",
        "7d": "1 –Ω–µ–¥–µ–ª—è",
        "1m": "1 –º–µ—Å—è—Ü (30 –¥–Ω–µ–π)",
        "cancel": "–û—Ç–º–µ–Ω–∏—Ç—å"
    }
    kb = []
    for key in terms:
        kb.append([
            InlineKeyboardButton(text=terms[key], callback_data=key)
        ])
    return InlineKeyboardMarkup(inline_keyboard=kb)

def tag_settings(settings: list[TagSettingsModel]) -> InlineKeyboardMarkup:
    btns = []
    for setting in settings:
        btns.append([
            InlineKeyboardButton(text=f"{setting.tag} ---> {setting.channel}", callback_data=f"{setting.id}")
        ])
    btns.append([InlineKeyboardButton(text=f"–î–æ–±–∞–≤–∏—Ç—å", callback_data="add")])
    return InlineKeyboardMarkup(inline_keyboard=btns)

def tag_edit() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥", callback_data="edit_tag")],
        [InlineKeyboardButton(text="üîß –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="edit_thread")],
        [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data="delete")],
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel")],
    ])